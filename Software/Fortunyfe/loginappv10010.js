var app=angular.module("HIS",["ngRoute","kendo.directives","ngCookies","globalErrors","ngResource","HIS.Login","HIS.AprobacionesExternas"]);app.config(["$provide","$httpProvider","$compileProvider",function(o,e,r){$()}]),app.config(["$routeProvider",function(o){o.when("/",{templateUrl:"js/app/Login/loginView.html",controller:"loginController"}).when("/aprobacionesExternas/:tokenjwt/:entidad/:idEntidad/:idUsuario/:idSolicitud/:estado",{templateUrl:"js/app/AprobacionesExternas/aprobacionesExternasView.html",controller:"AprobacionesExternasController"}).when("/recuperarClave",{templateUrl:"js/app/Login/recuperarPasswordView.html",controller:"recupPassController"}).when("/recuperarClave/nuevaContrasenia/:idUsuario",{templateUrl:"js/app/Login/cambiarPassView.html",controller:"nuevoPasswordController"})}]);var HISLogin=angular.module("HIS.Login",[]);HISLogin.value("startPage","welcome.html"),HISLogin.controller("loginController",["$cookieStore","$scope","Session","startPage",function(o,e,r,t){var a=o.get("tokenActual");null==a?(e.erroresLoggin="",e.mismoValor=!1,e.formData={},e.cerrarPupUp=function(){$("#popupDatosIncorrectos").modal("hide")},e.submitForm=function(o){if(e.submitted=!0,o){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://localhost",n.sub="http://localhost",n.exp=i,n.usuario=e.formData.usuario,n.contrasena=e.formData.password,n.latitud="10",n.longitud="20",n.jti="id123456",n.aud="http://localhost";var s=JSON.stringify(a),l=JSON.stringify(n),c=KJUR.jws.JWS.sign(null,s,l,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");e.token={},e.token.jwt=c;var u={};u.Token=localStorage[c],r.authUser().save(e.token).$promise.then(function(o){var e=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(o.JWT.split(".")[1]));0!=e.idUsuario&&($tokenInicio=o.JWT,localStorage.setItem("sJWT",o.JWT),window.location=t),"000000"==o.Code&&(localStorage.Token=e.token,$window.location.reload())},function(o){o.status;e.mostrarMensajeError=o.data.err,r.logginPswdIncorrecto()})}}):window.location=t}]),HISLogin.controller("recupPassController",["$scope","Session","startPage",function(o,e,r){o.formData={},o.enviarUsuario=function(r){o.submitted=!0,r&&e.recuperarPassword().recupPassword({correo:o.formData.usuario},function(o){e.mensajeEnvioEmail(function(o){window.location="/#/"})},function(o){})},o.cerrarPupUp=function(){$("#popupEnvioEmail").modal("hide")}}]),HISLogin.controller("nuevoPasswordController",["$scope","Session","startPage","$routeParams",function(o,e,r,t){o.token=t.idUsuario,localStorage.setItem("sJWT",o.token),o.formData={},o.cambiarClaveUsuario=function(r,t){if(o.submitted=!0,t)if(o.formData.nuevaClave==o.formData.repitaNuevaClave){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://157.245.86.94",n.sub="http://157.245.86.94",n.exp=i,n.claveNueva=o.formData.nuevaClave,n.jti="id123456",n.aud="http://157.245.86.94";var s=JSON.stringify(a),l=JSON.stringify(n),c=KJUR.jws.JWS.sign(null,s,l,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");o.clave=c,e.CambiarPswd().nuevoPassword({jwt:o.clave},function(o){e.mensajeUpdate(function(o){window.location="/#/"})},function(o){})}else $("#contraseniasDesiguales").modal("show")},o.cerrarPupUp=function(){$("#popupMensajesUpdate").modal("hide"),$("#contraseniasDesiguales").modal("hide")}}]),HISLogin.directive("popupEnvioEmail",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeEmail.html"}}),HISLogin.directive("mensajeUpdateData",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeUpdate.html"}}),HISLogin.directive("pwdIncorrecto",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpLogginPwdIncorrecto.html"}}),HISLogin.directive("mensajeError404",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUps/popUpError404.html"}});var globalErrors=new angular.module("globalErrors",[]).config(["$provide","$httpProvider","$compileProvider",function(o,e,r){$();console.log("Aism");var t=function(o,e){$("#mensajeError").text(e),$("#popupErroresGlobales").modal("show"),setTimeout(function(){$("#popupErroresGlobales").modal("hide")},2200)};e.interceptors.push(["$q",function(o){return{responseError:function(e){return console.log("Mole"),console.log(e),t(e.data,e.data.message),o.reject(e)}}}])}]);HISLogin.factory("Session",["$resource","$cookieStore",function(o,e){var r="http://localhost:8052";localStorage.getItem("sJWT");return{urlBase:function(){return r},authUser:function(){return o(r+"/HS_Autenticar",{},{update:{method:"PUT"}})},recuperarPassword:function(){return o(r+"/HS_Usuario/:id",{id:"@_id"},{recupPassword:{url:r+"/HS_Usuario/recuperarPswd",method:"POST"}})},CambiarPswd:function(){return o(r+"/HS_Usuario/:id",{id:"@_id"},{nuevoPassword:{url:r+"/HS_Usuario/nuevoPswd",method:"POST",headers:{Authorization:"Basic "+Base64.encode(localStorage.getItem("sJWT"))}}})},mensajeEnvioEmail:function(o){$("#popupEnvioEmail").modal("show"),setTimeout(function(){$("#popupEnvioEmail").modal("hide"),setTimeout(function(){return o(200)},800)},2e3)},mensajeUpdate:function(o){$("#popupMensajesUpdate").modal("show"),setTimeout(function(){$("#popupMensajesUpdate").modal("hide"),setTimeout(function(){return o(200)},800)},2e3)},logginPswdIncorrecto:function(){$("#popupDatosIncorrectos").modal("show"),setTimeout(function(){$("#popupDatosIncorrectos").modal("hide")},3e3)}}}]);var HISAprobacionesExternas=angular.module("HIS.AprobacionesExternas",[]);HISAprobacionesExternas.controller("AprobacionesExternasController",["$scope","$rootScope","$routeParams","AprobacionesExternasService",function(o,e,r,t){o.razonRechazo=" ",o.solitudRespondida=!1,o.tipoRespuesta="Aprobada",o.solitudEnProceso=!1,o.solitudErronea=!1,o.errorRazonRechazo=!1,o.ingresarRazonRechazo=!1,0==r.estado&&(o.ingresarRazonRechazo=!0),o.solicitudAprobacion=function(e){o.solitudEnProceso=!0;var a={entidad:r.entidad,idEntidad:r.idEntidad,idUsuario:r.idUsuario,idSolicitud:r.idSolicitud,estado:r.estado};""!=e&&0==r.estado&&(a.razonRechazo=e),localStorage.setItem("sJWTExterno",r.tokenjwt),t.responderSolicitud().save(a,function(){o.solitudEnProceso=!1,o.solitudRespondida=!0,o.errorRazonRechazo=!1,o.ingresarRazonRechazo=!1,localStorage.removeItem("sJWTExterno")},function(e){console.log(e),o.errorRespuesta=e.data.message,o.solitudErronea=!0,o.solitudEnProceso=!1,o.errorRazonRechazo=!1,o.ingresarRazonRechazo=!1,localStorage.removeItem("sJWTExterno")})},1==r.estado&&o.solicitudAprobacion(""),o.rechazarSolicitud=function(e){" "!=e&&""!=e&&e?(o.tipoRespuesta="Rechazada",o.solicitudAprobacion(e)):o.errorRazonRechazo=!0}}]),HISAprobacionesExternas.factory("AprobacionesExternasService",["$resource","$q","$http","Session",function(o,e,r,t){return{responderSolicitud:function(){return o(t.urlBase()+"/aprobacionesExternas/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(localStorage.getItem("sJWTExterno"))}}})}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

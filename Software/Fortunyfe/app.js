function fileCtrl(e,o,t){e.partialDownloadLink=t.urlBase()+"/download?filename=",e.filename="",e.uploadFile=function(){e.processDropzone()},e.reset=function(){e.resetDropzone()},e.uploadFilesFunct=function(){e.cargarAdjuntos(),$("#popupUploadFile").modal("show")},e.eliminarFile=function(t){o.obtenerArchivos()["delete"]({id:t.id},function(t){o.obtenerArchivos().query({entidad:e.entidad.nombre},function(o){e.regs=o,e.registrations.read()},function(e){})},function(e){})},e.cargarAdjuntos=function(){e.regs,e.filtroActual="5",e.mostrarFiltros=!1,e.registrations=new kendo.data.DataSource({transport:{read:function(o){o.success(e.regs)}},schema:{model:{fields:{filename:{type:"string",editable:!1}}}},pageSize:10,Paging:!0}),e.registrationsColumns=[{field:"filename",title:"Archivo",template:'<a href="'+t.urlBase()+'/Adjuntos/download/#=id#" target="_blank">#=filename#</a>'},{command:[{text:" ",template:'<kendo-button sprite-css-class="\'k-icon k-i-close\'"  ng-click="eliminarFile(dataItem)" ></kendo-button>'}]}],e.gridOptions={},e.regs=o.obtenerArchivos().query({entidad:e.entidad.nombre,idEntidad:e.entidad.idEntidad},function(o){e.registrations.read()},function(e){})}}function fileKendoCtrl(e,o,t){e.uploadOptions={saveUrl:t.urlBase()+"/upload/",removeUrl:t.urlBase()+"/remove/rr",autoUpload:!0,withCredentials:!1},e.onSelect=function(e){$.map(e.files,function(e){return e.name}).join(", ")},e.onUpload=function(e){var o=e.XMLHttpRequest;o&&o.addEventListener("readystatechange",function(e){1==o.readyState&&o.setRequestHeader("Authorization","Basic "+Base64.encode(localStorage.getItem("sJWT")))})}}function dropzone(e){return function(o,t,r){var a=o.entidad.idEntidad,n=o.entidad.nombre,i={url:e.urlBase()+"/"+n+"/upload/?numero="+a,headers:{Authorization:"Basic "+Base64.encode(localStorage.getItem("sJWT"))},maxFilesize:100,previewTemplate:document.getElementById("preview-template").innerHTML,paramName:"uploadfile",addRemoveLinks:!0,dictInvalidFileType:"El archivo contiene una extensión no permitida",dictFileTooBig:"El archivo es demasiado pesado. No debe superar los {{maxFilesize}} MB",dictResponseError:"Hubo un error al intentar cargar el archivo",dictCancelUpload:"Cancelar carga",dictCancelUploadConfirmation:"¿Está seguro que desea cancelar la carga del archivo?",dictRemoveFile:"Descartar Archivo",maxThumbnailFilesize:10,parallelUploads:10,autoProcessQueue:!0},s={addedfile:function(e){o.file=e,o.$apply(function(){o.fileAdded=!0})},success:function(e,o){}};dropzone=new Dropzone(t[0],i),angular.forEach(s,function(e,o){dropzone.on(o,e)}),o.processDropzone=function(){dropzone.processQueue()},o.resetDropzone=function(){dropzone.removeAllFiles()}}}var app=angular.module("HIS",["ngRoute","kendo.directives","ngCookies","ngResource","globalErrors","ui.bootstrap","HIS.Principal","HIS.Shared","HIS.Profile","HIS.Network","HIS.Analitycs","HIS.List","angucomplete-alt"]);app.run(["$rootScope","$cookieStore","ProfileService",function(e,o,t){null===localStorage.getItem("sJWT")?null!==o.get("tokenActual")&&o.get("tokenActual")?localStorage.setItem("sJWT",o.get("tokenActual")):window.location="index.html":null===localStorage.getItem("funcionalidades")&&t.Parametros().get(function(e){for(i=0;i<e.length;i++){var o=JSON.stringify(e[i].valorParam);localStorage.setItem(e[i].nombreParam,o)}})}]),app.config(["$routeProvider",function(e){EvaluarAcceso=function(e){if(null!=localStorage.getItem("funcionalidades")){var o=!1,t=JSON.parse(localStorage.getItem("funcionalidades"));for(i=0;i<t.length;i++)if(t[i]==e){o=!0;break}o||(console.log(e+": funcion no permitida"),window.location="/")}},e.when("/cambiarContrasenia",{templateUrl:"js/app/Profile/cambiarPasswordView.html",controller:"ProfileCambiarPassController",resolve:{check:function(){EvaluarAcceso("Cambiar Contraseña")}}}).when("/network",{templateUrl:"js/app/Network/networkView.html",controller:"networkController",resolve:{}}).when("/network/influencer/:username",{templateUrl:"js/app/Network/networkDetailsView.html",controller:"networkDetailsController",resolve:{}}).when("/network/influencer",{templateUrl:"js/app/Influencer/influencerView.html",controller:"influencerController",resolve:{}}).when("/network/list/:id",{templateUrl:"js/app/List/listView.html",controller:"listController",resolve:{}}).when("/analitycs",{templateUrl:"js/app/Analitycs/analitycsView.html",controller:"analitycsController",resolve:{}}).when("/analitycs/:id",{templateUrl:"js/app/Analitycs/analitycsDetailsView.html",controller:"analitycsDetailsController",resolve:{}}).when("/",{templateUrl:"js/app/Network/networkView.html",controller:"networkController",resolve:{}}).otherwise({redirectTo:"/"})}]);var HISAnalitycs=angular.module("HIS.Analitycs",[]),HISNetwork=angular.module("HIS.Network",[]),HISList=angular.module("HIS.List",[]),HISLogin=angular.module("HIS.Login",[]);HISLogin.value("startPage","welcome.html");var HISNetwork=angular.module("HIS.Network",[]),HISPrincipal=angular.module("HIS.Principal",[]),HISProfile=angular.module("HIS.Profile",["ngCookies"]),HISNetwork=angular.module("HIS.Network",[]),HISShared=angular.module("HIS.Shared",["ngCookies","kendo.directives","fps.hotkeys"]);HISAnalitycs.controller("analitycsController",["$scope","$filter","$http","$rootScope","$routeParams","analitycsService","ProfileService","$cookieStore","sharedFormateoUsaSVC",function(e,o,t,r,a,n,i,s,d){e.ini=function(){e.registrations=new kendo.data.DataSource({transport:{read:function(o){o.success(e.regs)}},schema:{model:{fields:{name:{type:"string",editable:!1},influencers:{type:"number",editable:!1},post:{type:"number",editable:!1},start:{type:"date",editable:!1},end:{type:"date",editable:!1}}}},pageSize:20,Paging:!0}),e.registrationsColumns=[{field:"name",title:"NAME",template:'<a href="\\#/analitycs/#= id #" style="color: black;text-decoration: none;">#= name #</a>'},{field:"influencers",title:"INFLUENCERS"},{field:"post",title:"POSTS"},{field:"start",title:"START DATE",type:"date",format:"{0:dd/MM/yyyy}"},{field:"end",title:"END DATE",type:"date",format:"{0:dd/MM/yyyy}"},{command:[{text:" ",template:'<kendo-button sprite-css-class="\'k-icon k-i-pencil\'" ng-click="mostrarOrdenCompra(dataItem)" data-toggle="tooltip" title="Modificar" id="botonMostrarOrdenCompra"></kendo-button>'}]}],e.gridOptions={excel:{fileName:"Articulos.xlsx",allPages:!0,filterable:!0},height:"70vh",filterable:{mode:"row",operators:{date:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},number:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},string:{startswith:"Inicia con",endswith:"Termina con",eq:"Es igual a",neq:"Es diferente a",contains:"Contiene",doesnotcontain:"No Contiene"}},messages:{and:"Y",or:"O",filter:"Filtrar",clear:"Limpiar",info:"Mostrar los valores que sean"}},sortable:!0,reorderable:!0,resizable:!0,editable:!0,selectable:"multiple, row",columnMenu:{messages:{sortAscending:"Ordenar Ascendentemente",sortDescending:"Ordenar Descendentemente",columns:"Columnas",filter:"Filtro Especial"}},pageable:{messages:{display:"{0} - {1} de {2} Registros",empty:"No existen datos",page:"Página",of:"de {0}",itemsPerPage:"Páginas",first:"Primero",previous:"Anterior",next:"Siguiente",last:"Último",refresh:"Refrescar"}},dataBound:function(e){$("#loading").fadeOut(200)}},e.cargarReportes()},e.reports=[],e.cargarReportes=function(){e.regs=n.report().get(function(o){e.reports=o,$("#gridArticulos .k-filter-row").hide(),e.registrations.read(),console.log(o)},function(e){})},e.ini(),e.reportView=function(){document.getElementById("report").style.display="flex",document.getElementById("table").style.display="none"},e.crearReporte=function(o){console.log(o);var r=o.url+"?__a=1";t({method:"GET",url:r,eventHandlers:{},beforeSend:function(e){e.setRequestHeader("*")},headers:{"Content-type":"application/x-www-form-urlencoded"}}).then(function(t){console.log(t.data.graphql.shortcode_media),o.idInfluencer=t.data.graphql.shortcode_media.owner.id,o.idInfluencer&&n.report().save(o,function(o){console.log("entra aca"),window.location="#/network",e.ini()})})}}]),HISAnalitycs.controller("analitycsDetailsController",["$scope","$filter","$http","$rootScope","$routeParams","analitycsService","ProfileService","$cookieStore","sharedFormateoUsaSVC",function(e,o,t,r,a,n,s,d,c){e.ini=function(){e.reports=[],e.report=[],e.likes=0,e.comments=0,e.interactions=0,n.report().get({id:a.id},function(o){for(e.report=o,i=0;i<e.report.length;i++){var r=e.report[i].urlPost+"?__a=1";t({method:"GET",url:r,eventHandlers:{},beforeSend:function(e){e.setRequestHeader("*")},headers:{"Content-type":"application/x-www-form-urlencoded"}}).then(function(o){console.log("hi"),console.log(o),e.comments=e.comments+o.data.graphql.shortcode_media.edge_media_preview_comment.count,e.likes=e.likes+o.data.graphql.shortcode_media.edge_media_preview_like.count,urlOwner=o.data.graphql.shortcode_media.owner.profile_pic_url,owner=o.data.graphql.shortcode_media.owner.username,full_name=o.data.graphql.shortcode_media.owner.full_name,urlPost=o.data.graphql.shortcode_media.display_url,e.interactions=e.comments+e.likes,e.reports.push({name:e.report[0].name,post:e.report.length,urlOwner:urlOwner,owner:owner,full_name:full_name,urlPost:urlPost}),console.log(e.reports)})}},function(e){}),n.report().get(function(o){e.reportsColumn=o,console.log(e.reportsColumn)},function(e){}),console.log(e.reports)},e.ini(),e.reportView=function(){document.getElementById("report").style.display="flex",document.getElementById("table").style.display="none"},e.crearReporte=function(e){console.log(e)},e.summary=function(){document.getElementById("report").style.display="flex",document.getElementById("performance").style.display="none",document.getElementById("influencers").style.display="none",document.getElementById("post").style.display="none"},e.performance=function(){var e;document.getElementById("report").style.display="none",document.getElementById("performance").style.display="flex",document.getElementById("influencers").style.display="none",document.getElementById("post").style.display="none",e=document.getElementById("performance"),e.classList.add("activeMenu")},e.influencers=function(){document.getElementById("report").style.display="none",document.getElementById("performance").style.display="none",document.getElementById("influencers").style.display="flex",document.getElementById("post").style.display="none"},e.post=function(){console.log("holi"),document.getElementById("report").style.display="none",document.getElementById("performance").style.display="none",document.getElementById("influencers").style.display="none",document.getElementById("post").style.display="flex"}}]),HISAnalitycs.factory("analitycsService",["$resource","$q","$http","connStringSVC",function(e,o,t,r){return{report:function(){return e(r.urlBase()+"/Report/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},list:function(){return e(r.urlBase()+"/List/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},listPhotos:function(){return e(r.urlBase()+"/ListPhotos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},influencer:function(){return e(r.urlBase()+"/Influencer/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},cargos:function(){return e(r.urlBase()+"/CargoNombre/",{id:"@_id"},{query:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},save:{url:r.urlBase()+"/Cargo/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},facturasProveedores:function(){return e(r.urlBase()+"/FacturacionProveedor/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},detalleFactura:{url:r.urlBase()+"/detalleFacturaProveedor/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})}}}]),HISNetwork.factory("networkService",["$resource","$q","$http","connStringSVC",function(e,o,t,r){return{price:function(){return e(r.urlBase()+"/price/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},list:function(){return e(r.urlBase()+"/List/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},listPhotos:function(){return e(r.urlBase()+"/ListPhotos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},influencer:function(){return e(r.urlBase()+"/Influencer/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},cargos:function(){return e(r.urlBase()+"/CargoNombre/",{id:"@_id"},{query:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},save:{url:r.urlBase()+"/Cargo/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},facturasProveedores:function(){return e(r.urlBase()+"/FacturacionProveedor/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},detalleFactura:{url:r.urlBase()+"/detalleFacturaProveedor/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})}}}]),HISList.controller("listController",["$scope","$filter","$http","$routeParams","$rootScope","listService","ProfileService","$cookieStore","sharedFormateoUsaSVC",function(e,o,t,r,n,s,d,c,l){e.ini=function(){e.cantidadInfluencer=0,e.cantidadInsta=0,s.list().get({id:r.id},function(o){e.lista=o[0],console.log("listarrrrrrr"),console.log(o[0])}),s.influencer().get(function(o){console.log(o),e.influencers=o}),s.listxinfluencer().get({id:r.id},function(o){for(e.allInfluencers=o,e.cantidadInfluencer=o.length,e.cantidadInsta=o.length,a=0;a<e.cantidadInfluencer;a++){username_instagram=o[0].username_instagram;"https://www.instagram.com/"+username_instagram,e.part=[];e.mention=[],e.divide=[],e.retorno,e.retorno2,t({method:"GET",skipAuthorization:!0,url:"https://www.instagram.com/"+username_instagram+"/?__a=1",headers:{"Content-type":"application/x-www-form-urlencoded"}}).then(function(t){var r=0,a=0,n=0,i=0;for(e.influencer=o[0],idSql=o[0].id,e.influencer.followers=t.data.graphql.user.edge_followed_by.count,c=0;c<10;c++){a=t.data.graphql.user.edge_owner_to_timeline_media.edges[c].node.edge_liked_by.count,i=t.data.graphql.user.edge_owner_to_timeline_media.edges[c].node.edge_media_to_comment.count;var s=t.data.graphql.user.edge_owner_to_timeline_media.edges[c].node.edge_media_to_caption.edges[0].node.text;e.divide=e.exe(s),n+=a,r+=i}e.retorno=e.divide[0],e.retorno2=e.divide[1];for(var d=0,c=0;0!=e.retorno.length;){for(j=0;j<e.retorno.length;j++)e.retorno[0]==e.retorno[j]&&d++;for(e.hastagh.push({name:e.retorno[0],count:d}),z=0;z<e.retorno.length;z++)e.retorno[z]==e.hastagh[c].name&&e.retorno.splice(z,1);c++,d=0}for(c=0,d=0;0!=e.retorno2.length;){for(j=0;j<e.retorno2.length;j++)e.retorno2[0]==e.retorno2[j]&&d++;for(e.mentions.push({name:e.retorno2[0],count:d}),z=0;z<e.retorno2.length;z++)e.retorno2[z]==e.mentions[c].name&&e.retorno2.splice(z,1);c++,d=0}e.hast=e.hastagh.sort(function(e,o){return o.count-e.count}),e.mention=e.mentions.sort(function(e,o){return o.count-e.count}),likesAndComments=n+r,e.influencer.interaction=likesAndComments/10,e.influencer.engagement=(e.influencer.interaction/e.influencer.followers*100).toFixed(2),id=t.data.graphql.user.id},function(e){})}})},e.invited=[],e.ini(),e.resume=function(){document.getElementById("resumeName").style.color="rgb(39, 0, 56)",document.getElementById("influencerName").style.color="gray",document.getElementById("influencer").style.display="none",document.getElementById("resume").style.display="initial"},e.influencer=function(){document.getElementById("influencerName").style.color="rgb(39, 0, 56)",document.getElementById("resumeName").style.color="gray",document.getElementById("resume").style.display="none",document.getElementById("influencer").style.display="initial"},e.influencerInList=function(){$("#popupadd").modal("show")},e.addInList=function(){e.invited.length>0&&s.listxinfluencer().save(e.invited,function(e){console.log(e),window.location="#/network/list/"+r.id})},e.toggleCurrency=function(o,t){if(t.isChecked)e.invited.push({idList:r.id,idInfluencer:t.id});else for(i=0;i<e.invited.length;i++)e.invited[i].idInfluencer==t.id&&e.invited.splice(i,1);console.log(e.invited)},e.nuevoInfluencer=function(){$("#popupNuevoInfluencer").modal("show")},e.addLink=function(){$("#popupLink").modal("show")},e.pointer=function(e){console.log("use ng-click"+e),window.location="#/network/"+e},e.nuevo=function(e){console.log("sie ntvrf0"),console.log(e),console.log("i am here");"https://www.instagram.com/"+e.nombre}}]),HISList.factory("listService",["$resource","$q","$http","connStringSVC",function(e,o,t,r){return{price:function(){return e(r.urlBase()+"/price/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},list:function(){return e(r.urlBase()+"/List/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},listxinfluencer:function(){return e(r.urlBase()+"/ListxInfl/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},influencer:function(){return e(r.urlBase()+"/Influencer/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},cargos:function(){return e(r.urlBase()+"/CargoNombre/",{id:"@_id"},{query:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},save:{url:r.urlBase()+"/Cargo/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},facturasProveedores:function(){return e(r.urlBase()+"/FacturacionProveedor/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},detalleFactura:{url:r.urlBase()+"/detalleFacturaProveedor/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})}}}]),HISLogin.controller("loginController",["$cookieStore","$scope","Session","startPage",function(e,o,t,r){var a=e.get("tokenActual");null==a?(o.erroresLoggin="",o.mismoValor=!1,o.formData={},o.cerrarPupUp=function(){$("#popupDatosIncorrectos").modal("hide")},o.submitForm=function(e){if(o.submitted=!0,e){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://localhost",n.sub="http://localhost",n.exp=i,n.usuario=o.formData.usuario,n.contrasena=o.formData.password,n.latitud="10",n.longitud="20",n.jti="id123456",n.aud="http://localhost";var s=JSON.stringify(a),d=JSON.stringify(n),c=KJUR.jws.JWS.sign(null,s,d,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");o.token={},o.token.jwt=c;var l={};l.Token=localStorage[c],t.authUser().save(o.token).$promise.then(function(e){var o=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(e.JWT.split(".")[1]));0!=o.idUsuario&&($tokenInicio=e.JWT,localStorage.setItem("sJWT",e.JWT),window.location=r),"000000"==e.Code&&(localStorage.Token=o.token,$window.location.reload())},function(e){e.status;o.mostrarMensajeError=e.data.err,t.logginPswdIncorrecto()})}}):window.location=r}]),HISLogin.controller("recupPassController",["$scope","Session","startPage",function(e,o,t){e.formData={},e.enviarUsuario=function(t){e.submitted=!0,t&&o.recuperarPassword().recupPassword({correo:e.formData.usuario},function(e){o.mensajeEnvioEmail(function(e){window.location="/#/"})},function(e){})},e.cerrarPupUp=function(){$("#popupEnvioEmail").modal("hide")}}]),HISLogin.controller("nuevoPasswordController",["$scope","Session","startPage","$routeParams",function(e,o,t,r){e.token=r.idUsuario,localStorage.setItem("sJWT",e.token),e.formData={},e.cambiarClaveUsuario=function(t,r){if(e.submitted=!0,r)if(e.formData.nuevaClave==e.formData.repitaNuevaClave){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://localhost",n.sub="http://localhost",n.exp=i,n.claveNueva=e.formData.nuevaClave,n.jti="id123456",n.aud="http://localhost";var s=JSON.stringify(a),d=JSON.stringify(n),c=KJUR.jws.JWS.sign(null,s,d,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");e.clave=c,o.CambiarPswd().nuevoPassword({jwt:e.clave},function(e){o.mensajeUpdate(function(e){window.location="/#/"})},function(e){})}else $("#contraseniasDesiguales").modal("show")},e.cerrarPupUp=function(){$("#popupMensajesUpdate").modal("hide"),$("#contraseniasDesiguales").modal("hide")}}]);var globalErrors=new angular.module("globalErrors",[]).config(["$provide","$httpProvider","$compileProvider",function(e,o,t){$();console.log("Aism");var r=function(e,o){$("#mensajeError").text(o),$("#popupErroresGlobales").modal("show"),setTimeout(function(){$("#popupErroresGlobales").modal("hide")},2200)};o.interceptors.push(["$q",function(e){return{responseError:function(o){return console.log("Mole"),console.log(o),r(o.data,o.data.message),e.reject(o)}}}])}]);HISLogin.factory("Session",["$resource","$cookieStore",function(e,o){var t="http://157.245.86.94:8052";localStorage.getItem("sJWT");return{urlBase:function(){return t},authUser:function(){return e(t+"/HS_Autenticar",{},{update:{method:"PUT"}})},recuperarPassword:function(){return e(t+"/HS_Usuario/:id",{id:"@_id"},{recupPassword:{url:t+"/HS_Usuario/recuperarPswd",method:"POST"}})},CambiarPswd:function(){return e(t+"/HS_Usuario/:id",{id:"@_id"},{nuevoPassword:{url:t+"/HS_Usuario/nuevoPswd",method:"POST",headers:{Authorization:"Basic "+Base64.encode(localStorage.getItem("sJWT"))}}})},mensajeEnvioEmail:function(e){$("#popupEnvioEmail").modal("show"),setTimeout(function(){$("#popupEnvioEmail").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)},mensajeUpdate:function(e){$("#popupMensajesUpdate").modal("show"),setTimeout(function(){$("#popupMensajesUpdate").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)},logginPswdIncorrecto:function(){$("#popupDatosIncorrectos").modal("show"),setTimeout(function(){$("#popupDatosIncorrectos").modal("hide")},3e3)}}}]),HISNetwork.controller("networkController",["$scope","$filter","$http","$rootScope","networkService","ProfileService","$cookieStore","sharedFormateoUsaSVC",function(e,o,t,r,a,n,s,d){e.ini=function(){document.getElementById("pointer");a.list().get(function(o){function t(e,o){return e=e.toLowerCase(),o=o.toLowerCase(),e<o?-1:e>o?1:0}e.lista=o,e.lastList=o.slice(0,4),e.listas=e.lista.sort(function(e,o){return t(e.nombre,o.nombre)}),e.cantidadListas=o.length}),a.listPhotos().get(function(o){for(e.aux=[],e.photo=[],console.log("all list"),console.log(o),i=0;i<o.length;i++){for(e.aux=[],j=i;j<o.length;j++)o[i].id==o[j].id&&(e.aux.push({nombreInfluencer:o[j].nombreInflu,profile_url:o[j].profile_url}),i=j);e.photo.push({id:o[i].id,nombre:o[i].nombre,descripcion:o[i].descripcion,influencers:e.aux})}e.photos=e.photo.slice(0,4),console.log(e.photos)}),a.influencer().get(function(o){function t(e,o){return e=e.toLowerCase(),o=o.toLowerCase(),e<o?-1:e>o?1:0}e.cantidadInfluencers=o.length,e.influencerIntern=o,e.url=o[0].url,e.nombres=o.slice(0,7),e.allInfluencers=o.sort(function(e,o){return t(e.nombre,o.nombre)}),console.log(e.allInfluencers)})},e.ini(),e.nuevaLista=function(){$("#popupNuevaLista").modal("show")},e.nuevoInfluencer=function(){$("#popupNuevoInfluencer").modal("show")},e.addLink=function(){$("#popupLink").modal("show");
},e.listView=function(e){window.location="#/network/list/"+e},e.pointer=function(e){console.log("use ng-click"+e),window.location="#/network/influencer/"+e},e.nuevo=function(o){var r;r=o.nombre.startsWith("https://www.instagram.com/")?o.nombre+"?__a=1":"https://www.instagram.com/"+o.nombre+"/?__a=1",t({method:"GET",url:r,eventHandlers:{},beforeSend:function(e){e.setRequestHeader("*")},eventHandlers:{"Access-Control-Allow-Origin":"*"},headers:{"Content-type":"application/x-www-form-urlencoded"}}).then(function(o){for(console.log(o),r=o.data.graphql,0!=r.user.id&&(document.getElementById("hideThis").style.display="none",document.getElementById("popupLink").style.display="none",username_instagram=r.user.username,id_instagram=r.user.id,profile_url=r.user.profile_pic_url),i=0;i<e.influencerIntern.length;i++)id=e.influencerIntern[i].id_instagram,id_instagram==id&&(console.log(r.user),document.getElementById("profile").style.display="flex")},function(e){alert("no url")})},e.filterPage=function(){console.log("filter Page")},e.allPage=function(){window.location="#/network/influencer"},e.createInfluencer=function(o,t){o.username_instagram=username_instagram,o.id_instagram=id_instagram,o.profile_url=profile_url,o.idSocial=1,console.log(o),e.submitted=!0,t&&a.influencer().save(o,function(o){window.location.reload(),e.ini()})},e.crearLista=function(o,t){console.log(o),console.log(t),e.submitted=!0,t&&a.list().save(o,function(o){console.log("entra aca"),window.location="#/network",$("#popupNuevaLista").modal("hide"),$("#reload").load(window.location.href+" #reload"),e.ini()})},e.inList=function(e){console.log(e),window.location="#/network/list/"+e.id},e.cerrarSesion=function(){s.remove("tokenActual"),localStorage.removeItem("sJWT"),localStorage.removeItem("funcionalidades"),window.location="/#/"},e.mostrarPopUpReportes=function(o){e.tipoReporte=o,e.$broadcast("eventPopupReportes",{tipoReporte:o})},e.tipoCambioActualizar=function(){e.actualizarTC_fecha={},e.actualizarTC_fecha.moneda="USD",e.actualizarTC_fecha.valor_tipo_cambio=0;new Date;e.actualizarTC_fecha.fecha=o("date")(new Date,"dd/MM/yyyy"),e.traerTipoCambio(),$("#popupactualizarTipoCambio").modal("show")},e.grabarTipoCambio=function(){if(e.actualizarTC_fecha.idExistente)menuService.tipoCambio().update({id:e.actualizarTC_fecha.idExistente},{cambio:e.actualizarTC_fecha.valor_tipo_cambio},function(){e.mostrarMensajeAviso=!0,setTimeout(function(){e.mostrarMensajeAviso=!1,e.$apply()},1e3)});else{var o={cambio:e.actualizarTC_fecha.valor_tipo_cambio,moneda:e.actualizarTC_fecha.moneda,fecha:d.fechaUsa(e.actualizarTC_fecha.fecha)};menuService.tipoCambio().save(o,function(){e.mostrarMensajeAviso=!0,setTimeout(function(){e.mostrarMensajeAviso=!1,e.$apply()},1e3)})}},e.traerTipoCambio=function(){menuService.tipoCambio().query({fecha:e.actualizarTC_fecha.fecha,moneda:e.actualizarTC_fecha.moneda},function(o){o.length>0?(e.actualizarTC_fecha.valor_tipo_cambio=o[0].cambio,e.actualizarTC_fecha.idExistente=o[0].id):(e.actualizarTC_fecha.idExistente=null,e.actualizarTC_fecha.valor_tipo_cambio=0)})}}]),HISNetwork.controller("networkDetailsController",["$scope","$filter","$http","$rootScope","$routeParams","networkService","ProfileService","$cookieStore","sharedFormateoUsaSVC",function(e,o,t,r,a,n,s,d,c){var l="";e.hastagh=[],e.mentions=[];var u,h;e.ini=function(){n.influencer().get({id:a.username},function(o){l=o[0].username_instagram;e.part=[];e.mention=[],e.divide=[],e.retorno,e.retorno2,t({method:"GET",url:"https://www.instagram.com/"+l+"/?__a=1",eventHandlers:{},beforeSend:function(e){e.setRequestHeader("*")},headers:{"Content-type":"application/x-www-form-urlencoded"}}).then(function(t){console.log(t);var r=0,a=0,n=0,i=0,s=0,d=0,c=0,l=!1;e.influencer=o[0],e.influencer.profile_url=t.data.graphql.user.profile_pic_url,u=o[0].id;var m=t.data.graphql.user.edge_followed_by.count;for(e.influencer.followers=e.numberWithCommas(t.data.graphql.user.edge_followed_by.count),console.log(t.data.graphql.user.edge_owner_to_timeline_media),f=0;f<12;f++){if(a=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.edge_liked_by.count,s=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.edge_media_to_comment.count,n=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.edge_media_to_caption.edges.length,n>0)var g=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.edge_media_to_caption.edges[0].node.text;l=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.is_video,l&&(d+=t.data.graphql.user.edge_owner_to_timeline_media.edges[f].node.video_view_count,c+=1),e.divide=e.exe(g),i+=a,r+=s}e.retorno=e.divide[0],console.log(e.retorno),e.retorno2=e.divide[1],console.log(e.retorno2);for(var p=0,f=0;0!=e.retorno.length;){for(j=0;j<e.retorno.length;j++)e.retorno[0]==e.retorno[j]&&p++;for(e.hastagh.push({name:e.retorno[0],count:p}),z=0;z<e.retorno.length;z++)e.retorno[z]==e.hastagh[f].name&&e.retorno.splice(z,1);f++,p=0}for(f=0,p=0;0!=e.retorno2.length;){for(j=0;j<e.retorno2.length;j++)e.retorno2[0]==e.retorno2[j]&&p++;for(e.mentions.push({name:e.retorno2[0],count:p}),z=0;z<e.retorno2.length;z++)e.retorno2[z]==e.mentions[f].name&&e.retorno2.splice(z,1);f++,p=0}e.hast=e.hastagh.sort(function(e,o){return o.count-e.count}),e.mention=e.mentions.sort(function(e,o){return o.count-e.count}),likesAndComments=i+r+d,console.log((likesAndComments/10).toFixed(2)),e.influencer.interaction=(likesAndComments/10/1e3).toFixed(2).concat("k"),e.influencer.engagement=e.numberWithCommas(((likesAndComments/10).toFixed(2)/m*100).toFixed(2)).concat("%"),h=t.data.graphql.user.id,console.log("view",d),e.getFollowers(i,r,d/c),e.viewSocial()},function(e){}),e.exe=function(o){var t=o.split(" ");for(i=0;i<t.length;i++)x=t[i].startsWith("#"),y=t[i].startsWith("@"),x&&e.part.push(t[i]),y&&e.mention.push(t[i]);return[e.part,e.mention]}})},e.ini(),e.numberWithCommas=function(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},e.withoutCommas=function(e){return e.replace(/,/g,"")},e.savePrice=function(e,o){e.idInfluencer=u,console.log(e),console.log(o),n.price().save(e,function(e){console.log(e)})},e.viewSocial=function(){n.price().get({id:u},function(o){e.prices=o,e.prices.create_date=o.create_date,console.log(e.prices),document.getElementById("namePrice").style.color="gray",document.getElementById("nameSocial").style.color="black",document.getElementById("social").style.display="flex",document.getElementById("pricePanel").style.display="none"})},e.viewPrice=function(){n.price().get({id:u},function(o){if(e.prices=o,o>0)for(i=0;i<o.length;i++)e.prices[i].create_date=c.fechaUsa(o[i].create_date);console.log(e.prices),document.getElementById("namePrice").style.color="black",document.getElementById("nameSocial").style.color="gray",document.getElementById("social").style.display="none",document.getElementById("pricePanel").style.display="initial"})},e.actualizar=function(){console.log(e.influencer);var o=e.influencer;n.influencer().update({id:e.influencer.id},{nombre:o.nombre,apellido:o.apellido,nota_personal:o.nota_personal,email:o.email,telefono:o.telefono},function(e){window.location.reload()})},e.getFollowers=function(o,t,r){console.log(r);var a=document.getElementById("chartjs-4"),n=(o/1e4).toFixed(2)+"k Likes",i=t/10+" Comments",s=(r/1e3).toFixed(2)+"k Video view",d=new Chart(a,{type:"doughnut",data:{labels:[n,s,i],legendText:"{label}",datasets:[{data:[o/10,r,t/10],backgroundColor:["rgb(219, 46, 124)","rgb(49, 133, 156)","rgb(247,229,52)"],borderAlign:"inner",borderWidth:1,hoverBorderColor:["rgb(219, 46, 124)","rgb(90, 86, 202)","rgb(247,229,52)"],hoverBorderWidth:5}]},options:{responsive:!0,maintainAspectRatio:!1,cutoutPercentage:88,legend:{display:!1}}});document.getElementById("js-legend").innerHTML=d.generateLegend();var c=1e3*e.influencer.interaction.slice(0,-1),l=parseInt(e.withoutCommas(e.influencer.followers)),u=(c/l*1e3).toFixed(2);console.log("hi",c,l,u),u>100&&(u=100-c/1e3,u>89?(u=85.7,console.log("yep")):(u=89-c/1e4,console.log("yep2",u))),90>u&&u>80&&(u-=75.5),80>u&&u>70?(u-=62.5,console.log("aquiii")):70>u&&u>60?u-=57.5:60>u&&u>50?u-=45.5:50>u&&u>40?u-=32.5:40>u&&u>30?u-=28.5:30>u&&u>20?u-=13.5:20>u&&(u-=4.9),console.log(u);var h=(100-u).toFixed(2),m=document.getElementById("quality"),g=new Chart(m,{type:"doughnut",data:{labels:[(h/100*l/1e3).toFixed(2)+"k ("+h+"%) \n Nice Followers",(u/100*l/1e3).toFixed(2)+"k ("+u+"%)  Doubtful Followers"],datasets:[{data:[h,u],backgroundColor:["rgb(219, 46, 124)","rgb(49, 133, 156)"],borderAlign:"inner",borderWidth:1,hoverBorderColor:["rgb(219, 46, 124)","rgb(90, 86, 202)"],borderWidth:1,hoverBorderWidth:7}]},options:{responsive:!0,maintainAspectRatio:!1,cutoutPercentage:89,legend:{display:!1}}});document.getElementById("js-legend2").innerHTML=g.generateLegend();var p=(h-30-20).toFixed(2),f=(100-p-20-19).toFixed(2),B=(100-f-p-10).toFixed(2),a=document.getElementById("age"),T=(new Chart(a,{type:"bar",data:{labels:["13-17","18-24","25-34","35-44","45-64","65+"],datasets:[{data:[f,p,B,10,7,3],borderWidth:2,hoverBorderWidth:9,backgroundColor:["rgb(219, 46, 124)","rgb(219, 46, 124)","rgb(219, 46, 124)","rgb(219, 46, 124)","rgb(219, 46, 124)","rgb(219, 46, 124)"],borderWidth:1}]},options:{responsive:!0,scales:{xAxes:[{barPercentage:.2,margin:0,labelMaxWidth:50,labelMaxWidth:100,ticks:{minRotation:0,maxRotation:0,padding:0}}],yAxes:[{ticks:{beginAtZero:!0,min:0,max:60,stepSize:15,reverse:!1}}]},legend:{display:!1}}}),Math.round(90*Math.random()+10)/100),v=Math.round(10*Math.random()+50)+T,a=document.getElementById("sex"),S=new Chart(a,{type:"doughnut",data:{labels:[100-v+"% Men   ",v+"% Women"],datasets:[{data:[100-v,v],backgroundColor:["rgb(49, 133, 156)","rgb(219, 46, 124)"],borderAlign:"inner",borderWidth:1,hoverBorderColor:["rgb(49, 133, 156)","rgb(219, 46, 124)"],borderWidth:1,hoverBorderWidth:7}]},options:{responsive:!0,maintainAspectRatio:!1,cutoutPercentage:89,legend:{display:!1}}});document.getElementById("js-legend3").innerHTML=S.generateLegend()}}]),HISNetwork.factory("networkService",["$resource","$q","$http","connStringSVC",function(e,o,t,r){return{price:function(){return e(r.urlBase()+"/price/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},list:function(){return e(r.urlBase()+"/List/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},listPhotos:function(){return e(r.urlBase()+"/ListPhotos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},influencer:function(){return e(r.urlBase()+"/Influencer/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},provFiltro:{url:r.urlBase()+"/ProveedorFiltro/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},proveedorCC:{url:r.urlBase()+"/ProveedorCentroCosto",isArray:!0,method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},cargos:function(){return e(r.urlBase()+"/CargoNombre/",{id:"@_id"},{query:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},save:{url:r.urlBase()+"/Cargo/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},facturasProveedores:function(){return e(r.urlBase()+"/FacturacionProveedor/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},detalleFactura:{url:r.urlBase()+"/detalleFacturaProveedor/:id",method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})}}}]),HISProfile.controller("ProfileCambiarPassController",["$scope","$rootScope","ProfileService","$routeParams","erroresServices","mensajesData",function(e,o,t,r,a,n){e.formData={},e.submitted=!1,e.cambiarClaveUsuario=function(o){if(e.submitted=!0,o){if(e.formData.nuevaClave==e.formData.repitaNuevaClave){e.submitted=!1;var r={alg:"HS256",typ:"JWT"},i={},s=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));i.iss="http://localhost",i.sub="http://localhost",i.exp=s,i.claveVieja=e.formData.claveAnterior,i.claveNueva=e.formData.nuevaClave,i.jti="id123456",i.aud="http://localhost";var d=JSON.stringify(r),c=JSON.stringify(i),l=KJUR.jws.JWS.sign(null,d,c,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");e.clave=l,e.enviar={jwt:e.clave},t.CambiarPassword().updatePassword(e.enviar,function(o){n.mensajeUpdate(function(o){e.formData={},window.location="#/main/chart"})},function(e){a.controlError(e.status)})}e.formData.nuevaClave!=e.formData.repitaNuevaClave&&($("#popupDatosIncorrectos").modal("show"),setTimeout(function(){$("#popupDatosIncorrectos").modal("hide")},3e3))}},e.cerrarPupUp=function(){$("#popupMensajesUpdate").modal("hide")}}]),HISProfile.factory("ProfileService",["$resource","$q","$http","connStringSVC","$cookieStore",function(e,o,t,r,a){return{Perfil:function(){return e(r.urlBase()+"/HS_Perfil/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},CambiarPassword:function(){return e(r.urlBase()+"/HS_Usuario/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},updatePassword:{url:r.urlBase()+"/HS_Usuario/password/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})},Parametros:function(){return e(r.urlBase()+"/HISParam/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},updatePassword:{url:r.urlBase()+"/HS_Usuario/password/",method:"POST",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(r.getToken())}}})}}}]),HISShared.controller("fileCtrl",["$scope","fileAppServices","connStringSVC",fileCtrl]),HISShared.controller("fileKendoCtrl",["$scope","fileAppServices","connStringSVC",fileKendoCtrl]),HISShared.directive("dropzone",["connStringSVC",dropzone]);var globalErrors=new angular.module("globalErrors",[]).config(["$provide","$httpProvider","$compileProvider",function(e,o,t){var r=($(),function(e,o){$("#mensajeError").text(o),$("#popupErroresGlobales").modal("show"),setTimeout(function(){$("#popupErroresGlobales").modal("hide")},2200)});o.interceptors.push(["$q",function(e){return{responseError:function(o){return r(o.data,o.data.message),e.reject(o)}}}])}]);HISShared.controller("reLoginController",["$cookieStore","$scope","SessionInternal","$route",function(e,o,t,r){o.erroresLoggin="",o.mismoValor=!1,o.failingLogin=0,o.formData={},o.submitForm=function(a){if(o.submitted=!0,a){var n={alg:"HS256",typ:"JWT"},s={},d=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));s.iss="http://localhost",s.sub="http://localhost",s.exp=d,s.usuario=o.formData.usuario,s.contrasena=o.formData.password,s.latitud="10",s.longitud="20",s.jti="id123456",s.aud="http://localhost";var c=JSON.stringify(n),l=JSON.stringify(s),u=KJUR.jws.JWS.sign(null,c,l,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");o.token={},o.token.jwt=u;var h={};h.Token=localStorage[u],t.authUser().save(o.token).$promise.then(function(e){var o=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(e.JWT.split(".")[1]));0!=o.idUsuario&&($tokenInicio=e.JWT,localStorage.setItem("sJWT",e.JWT),$("#popupError401").modal("hide"),r.reload(),ProfileService.Parametros().get(function(e){for(i=0;i<e.length;i++)localStorage.removeItem(e[i].nombreParam),localStorage.setItem(e[i].nombreParam,JSON.stringify(e[i].valorParam))})),"000000"==e.Code&&(localStorage.Token=o.token,$window.location.reload())},function(t){var r=t.status;401==r&&(e.remove("tokenActual"),localStorage.removeItem("sJWT"),o.erroresLoggin="Hubo un error con sus datos, inténtelo nuevamente",o.failingLogin++,o.failingLogin>3&&(window.location="/")),t.data<0&&(o.erroresLoggin="La cuenta está bloqueada por intentos fallidos. Faltan "+Math.abs(t.data)+" minutos para intentar nuevamente"),t.data==-9999&&(o.erroresLoggin="Lo sentimos usted no tiene autorización para ingresar al sistema"),t.data==-9998&&(o.erroresLoggin="Usted no podrá ingresar al sistema por una temporada")})}}}]),HISShared.factory("SessionInternal",["$resource","connStringSVC",function(e,o){return{authUser:function(){return e(o.urlBase()+"/HS_Autenticar",{},{update:{method:"PUT"}})}}}]),HISShared.controller("menuController",["$scope","$filter","$rootScope","menuService","ProfileService","$cookieStore","sharedFormateoUsaSVC","Hotkeys","getFEVersion",function(e,o,t,r,a,n,s,d,c){e.ini=function(){var o=d.createHotkey({key:"f8",callback:function(){e.mostrarPopUpReportes("3")}});c.checkVersion().query(function(e){e.version!=c.actualVersion()&&$("#popupMensajesVersion").modal("show")}),d.registerHotkey(o),r.listarMenu().query(function(o){for(console.log(o),e.modulos=[],i=0;i<o.length;i++){var t=!1;for(j=0;j<e.modulos.length&&(o[i].modulo===e.modulos[j].nombre&&(e.modulos[j].funcionalidades.push(o[i]),t=!0),!t);j++);if(console.log("menuuuuuuu"),0==t){var r={};r.nombre=o[i].modulo,r.funcionalidades=[],r.funcionalidades.push(o[i]),e.modulos.push(r)}}var a=JSON.parse(localStorage.getItem("funcionalidadesOpciones"));for(i=0;i<a.length;i++)"Solo Lectura"==a[i]&&(e.soloLectura=!0)})},e.ini(),e.cerrarSesion=function(){n.remove("tokenActual"),localStorage.removeItem("sJWT"),localStorage.removeItem("funcionalidades"),window.location="/#/"},e.mostrarPopUpReportes=function(o){e.tipoReporte=o,e.$broadcast("eventPopupReportes",{tipoReporte:o})},e.tipoCambioActualizar=function(){e.actualizarTC_fecha={},e.actualizarTC_fecha.moneda="USD",e.actualizarTC_fecha.valor_tipo_cambio=0;new Date;e.actualizarTC_fecha.fecha=o("date")(new Date,"dd/MM/yyyy"),e.traerTipoCambio(),$("#popupactualizarTipoCambio").modal("show")},e.grabarTipoCambio=function(){if(e.actualizarTC_fecha.idExistente)r.tipoCambio().update({id:e.actualizarTC_fecha.idExistente},{cambio:e.actualizarTC_fecha.valor_tipo_cambio},function(){e.mostrarMensajeAviso=!0,setTimeout(function(){e.mostrarMensajeAviso=!1,e.$apply()},1e3)});else{var o={cambio:e.actualizarTC_fecha.valor_tipo_cambio,moneda:e.actualizarTC_fecha.moneda,fecha:s.fechaUsa(e.actualizarTC_fecha.fecha)};r.tipoCambio().save(o,function(){e.mostrarMensajeAviso=!0,setTimeout(function(){e.mostrarMensajeAviso=!1,e.$apply()},1e3)})}},e.traerTipoCambio=function(){r.tipoCambio().query({fecha:e.actualizarTC_fecha.fecha,moneda:e.actualizarTC_fecha.moneda},function(o){o.length>0?(e.actualizarTC_fecha.valor_tipo_cambio=o[0].cambio,e.actualizarTC_fecha.idExistente=o[0].id):(e.actualizarTC_fecha.idExistente=null,e.actualizarTC_fecha.valor_tipo_cambio=0)})}}]),HISShared.controller("notificacionController",["$scope","$filter","$rootScope","menuService","ProfileService","NotificacionService","$cookieStore",function(e,o,t,r,a,n,i){e.updateNotifications=function(){e.notificaciones=[],n.notificacionesUsuario().get(function(o){for(var t=0;t<o.length;t++)e.notificaciones.push(o[t])})},e.updateNotifications(),e.notificationAction=function(o){n.notificacion()["delete"]({id:o.id},function(o){e.updateNotifications()}),window.location=o.link}}]),HISShared.controller("directivaMostrarAgregarDatosController",["$scope","$filter","$rootScope","directivaMostrarAgregarDatosServices",function(e,o,t,r){e.existe=!0,e.datosContactos={},e.cargarDatos=function(){e.datosContactos=r.directivaAgregar(e.modelo.modelo).query(e.modelo.filtro,function(e){})},e.validarExistencia=function(){for(e.existe=!1,i=0;i<e.datosContactos.length;i++)if(e.datosMostrarContacto[e.modelo.placeholder]==e.datosContactos[i].nombre){e.existe=!0;break}},e.crearNuevoValor=function(){e.datosGuardar={nombre:e.datosMostrarContacto[e.modelo.placeholder],tipo:e.modelo.placeholder},r.directivaAgregar(e.modelo.modelo).save(e.datosGuardar,function(){e.existe=!0,e.cargarDatos()})},e.cargarDatos()}]),HISShared.controller("directivaFcaturasVencidas",["$scope","$rootScope","facturasVencidasService",function(e,o,t){e.ini=function(){e.regs,e.mostrarFiltros=!1,e.registrationsFactVencidas=new kendo.data.DataSource({transport:{read:function(o){o.success(e.regsFactVencidas)}},schema:{model:{fields:{num_factura:{type:"string",editable:!1},nombre_cliente:{type:"string",editable:!1},fecha_vencimiento:{type:"date",editable:!1},total_cotizacion:{type:"number",editable:!1}}}},pageSize:10,Paging:!0}),e.registrationsColumnsFactVencidas=[{field:"num_factura",title:"Número"},{field:"nombre_cliente",title:"Cliente"},{field:"fecha_vencimiento",title:"Fecha de Vencimiento",type:"date",format:"{0:dd/MM/yyyy}"},{field:"total_factura",title:"Total"},{command:[{text:" ",template:'<kendo-button sprite-css-class="\'k-icon k-i-pencil\'" ng-click="mostrarFacturaVencidas(dataItem)"></kendo-button>'}]}],e.gridOptionsFactVencidas={height:570,filterable:{mode:"row",operators:{date:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},number:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},string:{startswith:"Inicia con",endswith:"Termina con",eq:"Es igual a",neq:"Es diferente a",contains:"Contiene",doesnotcontain:"No Contiene"}},messages:{and:"Y",or:"O",filter:"Filtrar",clear:"Limpiar",info:"Mostrar los valores que sean"}},sortable:!0,reorderable:!0,resizable:!0,editable:!0,columnMenu:{messages:{sortAscending:"Ordenar Ascendentemente",sortDescending:"Ordenar Descendentemente",columns:"Columnas",filter:"Filtro Especial"}},pageable:{messages:{display:"{0} - {1} de {2} Registros",empty:"No existen datos",page:"Página",of:"de {0}",itemsPerPage:"Páginas",first:"Primero",previous:"Anterior",next:"Siguiente",last:"Último",refresh:"Refrescar"}}},e.regsFactVencidas=t.factVencidas().get(function(o){$("#gridFacturasVencidas .k-filter-row").hide(),e.registrationsFactVencidas.read()},function(e){})},e.mostrarFacturaVencidas=function(o){e.formGrabar={id:o._id},window.location="#/facturas/"+o.id},e.ini(),e.mostrarOcultarFiltrosFactVenc=function(){e.mostrarFiltros?($("#gridFacturasVencidas .k-filter-row").hide(),e.mostrarFiltros=!1):($("#gridFacturasVencidas .k-filter-row").show(),e.mostrarFiltros=!0)}}]),HISShared.controller("tipoCambioController",["$scope","$filter","tipoCambioServices","sharedFormateoUsaSVC",function(e,o,t,r){e.$on("eventPopupTipoCambio",function(o){e.$parent.tipo_cambio=e.iniTipoCambio()}),e.iniTipoCambio=function(){e.tipo_cambio_fechaII&&(e.tipo_cambio_fecha=e.tipo_cambio_fechaII),e.tipo_cambio_fecha=o("date")(e.tipo_cambio_fecha,"dd/MM/yyyy");var a=o("date")(new Date,"dd/MM/yyyy");a==e.tipo_cambio_fecha?e.fechaCambiarTipo="Hoy":e.fechaCambiarTipo=e.tipo_cambio_fecha,e.tipo_cambio_fecha=r.fechaUsa(e.tipo_cambio_fecha),t.tipoCambio().query({moneda:e.tipo_cambio_moneda,fecha:e.tipo_cambio_fecha},function(o){0==o.length?(e.existe_tipo_cambio=!1,e.valor_tipo_cambio="",$("#popupTipoCambio").modal("show")):(e.existe_tipo_cambio=!0,e.tipo_cambio_bd=o[0].cambio)})},e.grabarTipoCambio=function(){e.valor_tipo_cambio?t.tipoCambio().save({moneda:e.tipo_cambio_moneda,cambio:e.valor_tipo_cambio,fecha:e.tipo_cambio_fecha},function(o){e.existe_tipo_cambio=!0,e.tipo_cambio_bd=parseFloat(o.cambio),$("#popupTipoCambio").modal("hide")}):e.tipo_cambio_vacio=!0}}]),HISShared.controller("widgetAprobacionesPendientesController",["$scope","aprobacionesPendientesService","ProfileService",function(e,o,t){e.regs,e.registrationsPendientes=new kendo.data.DataSource({transport:{read:function(o){o.success(e.regsPendientes)}},schema:{model:{fields:{id:{type:"number",editable:!1},numero:{type:"string",editable:!1},documento:{type:"string",editable:!1},ruta:{type:"string",editable:!1}}}},pageSize:20,Paging:!0}),e.registrationsColumnsPendientes=[{field:"numero",title:"Número"},{field:"documento",title:"documento"},{command:[{text:" ",template:'<kendo-button sprite-css-class="\'k-icon k-i-arrowhead-e\'" ng-click="mostrardocumentoAPR(dataItem.ruta,dataItem.id)"></kendo-button>'}]}],e.gridOptionsPendientes={height:250,filterable:{mode:"row",operators:{date:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},number:{eq:"Igual a",neq:"Diferente a",gte:"Mayor o igual a",gt:"Mayor a",lte:"Menor o igual a",lt:"Menor a"},string:{startswith:"Inicia con",endswith:"Termina con",eq:"Es igual a",neq:"Es diferente a",contains:"Contiene",doesnotcontain:"No Contiene"}},messages:{and:"Y",or:"O",filter:"Filtrar",clear:"Limpiar",info:"Mostrar los valores que sean"}},sortable:!0,reorderable:!0,resizable:!0,editable:!0,columnMenu:{messages:{sortAscending:"Ordenar Ascendentemente",sortDescending:"Ordenar Descendentemente",columns:"Columnas",filter:"Filtro Especial"}},pageable:{messages:{display:"{0} - {1} de {2} Registros",empty:"No existen datos",page:"Página",of:"de {0}",itemsPerPage:"Páginas",first:"Primero",previous:"Anterior",next:"Siguiente",last:"Último",refresh:"Refrescar"}},dataBound:function(e){$("#loading").fadeOut(200),setTimeout(function(){$('[data-toggle="tooltip"]').tooltip()},100)}},e.regsPendientes=o.listaPendientes().get(function(o){$("#griAprobacionesPendientes .k-filter-row").hide(),e.registrationsPendientes.read()}),e.validarAprobador=function(){var e="Aprobados";if(null===localStorage.getItem("funcionalidades"))t.Parametros().get(function(o){for(i=0;i<o.length;i++){var t=JSON.stringify(o[i].valorParam);localStorage.setItem(o[i].nombreParam,t);var r=!1,a=JSON.parse(localStorage.getItem("funcionalidades"));for(i=0;i<a.length;i++)if(a[i]==e){r=!0;break}}});else{var o=!1,r=JSON.parse(localStorage.getItem("funcionalidades"));for(i=0;i<r.length;i++)if(r[i]==e){o=!0;break}}return o},e.mostrardocumentoAPR=function(e,o){window.location="#ordenCompra/detalle/"+o}}]),HISShared.directive("popupMensaje",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensaje.html"}}),HISShared.directive("menuInicio",function(){return{restrict:"E",templateUrl:"js/app/Shared/menu.html"}}),HISShared.directive("directivaTipocambio",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpTipoCambio.html",controller:"tipoCambioController"}}),HISShared.directive("confirmarEliminacion",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUps/popUpEliminar.html"}}),HISShared.directive("mensajeSaveData",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeSave.html"}}),HISShared.directive("mensajeDeleteData",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeDelete.html"}}),HISShared.directive("mensajeUpdateData",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeUpdate.html"}}),HISShared.directive("mensajeErrorCheque",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUpMensajeErrorCheque.html"}}),HISShared.directive("mensajesErroresGlobales",function(){return{restrict:"E",templateUrl:"js/app/Shared/popUps/popUpErroresGlobales.html"}}),HISShared.directive("uploadFiles",function(){return{restrict:"E",scope:{entidad:"=entidad"},templateUrl:"js/app/Shared/upload.html"}}),HISShared.directive("facturasPendientes",function(){return{restrict:"E",templateUrl:"js/app/Facturacion/facturasVencidasView.html",controller:"directivaFcaturasVencidas"}}),HISShared.directive("widgetListadoCarpetas",function(){return{restrict:"E",templateUrl:"js/app/Shared/widgets/widgetCarpetaImportacion.html",controller:"widgetCarpetaController"}}),HISShared.directive("widgetListadoCotizacion",function(){return{restrict:"E",templateUrl:"js/app/Shared/widgets/widgetCotizacion.html",controller:"widgetCotizacionController"}}),HISShared.directive("widgetPendienteAprobacion",function(){return{restrict:"E",templateUrl:"js/app/Shared/widgets/widgetAprobacionesPendientes.html",controller:"widgetAprobacionesPendientesController"}}),HISShared.directive("widgetPendienteSolicitud",function(){return{restrict:"E",templateUrl:"js/app/Shared/widgets/widgetSolicitudesPendientes.html",controller:"widgetSolicitudesPendientesController"}}),HISShared.directive("widgetPendienteCompras",function(){return{restrict:"E",templateUrl:"js/app/Shared/widgets/widgetComprasPendientes.html",controller:"widgetComprasPendientesController"}}),HISShared.directive("loadingIndicator",["loadingCounts","$timeout",function(e,o){return{restrict:"A",link:function(t,r,a){t.$on("loading-started",function(t){e.enable_count++,o(function(){e.enable_count>e.disable_count&&r.css({display:""})},10)}),t.$on("loading-complete",function(o){e.disable_count++,e.enable_count==e.disable_count&&r.css({display:"none"})})}}}]),HISShared.directive("mostrarAgregarDatos",function(){return template='<div ng-controller="directivaMostrarAgregarDatosController"><input class="form-control" type="text" ng-change="validarExistencia()" name="dpd{{modelo.placeholder}}" list="{{modelo.placeholder}}" placeholder="Ingrese un {{modelo.placeholder}}" ng-model="datosMostrarContacto[modelo.placeholder]" required/><datalist  id="{{modelo.placeholder}}"><option ng-repeat="datosContactos in datosContactos"> {{datosContactos.nombre}} </option></datalist><label ng-click="crearNuevoValor()" ng-if="!existe " style="cursor: pointer;">Agregar {{datosMostrarContacto.placeholder}}</label></div>',
{restrict:"EA",scope:{datosMostrarContacto:"=dato",modelo:"=modelo"},template:template}}),HISShared.factory("connStringSVC",function(){var e="http://157.245.86.94:8052";return{urlBase:function(){return e},getToken:function(){return localStorage.getItem("sJWT")}}}),HISShared.factory("loadingCounts",function(){return{enable_count:0,disable_count:0}}),HISShared.factory("getFEVersion",["$resource","connStringSVC",function(e,o){return{checkVersion:function(){return e(o.urlBase()+"/VersionFE",{},{query:{method:"GET",isArray:!1,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})},actualVersion:function(){return xxversionFEActualxx}}}]),HISShared.factory("sharedValidationsSVC",function(){return{validarRangoFecha:function(e,o){var t=e.substring(0,2),r=e.substring(3,5),a=e.substring(6,10),n=o.substring(0,2),i=o.substring(3,5),s=o.substring(6,10),d=!1;return t<=n&&r<=i&&a<=s&&(d=!0),d},validarDinero:function(e){var o=!0;return e<=0&&(o=!1),o}}}),HISShared.factory("sharedFormateoUsaSVC",function(){return{fechaUsa:function(e){console.log(e);var o=e.substring(8,10);console.log(o);var t=e.substring(5,7);console.log(t);var r=e.substring(0,4);console.log(r);var a=r+"-"+t+"-"+o;return a},fechaFormato:function(e){console.log(e);var o=e.getDate(),t=e.getMonth()+1,r=e.getFullYear(),a=e.valHora();console.log("hora",a);var n=r+"-"+t+"-"+o;return n}}}),HISShared.factory("menuService",["$resource","connStringSVC",function(e,o){return{listarMenu:function(){return e(o.urlBase()+"/HS_Menu/:id",{id:"@_id"},{query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})},tipoCambio:function(){return e(o.urlBase()+"/TipoCambio/:id",{id:"@id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("conceptoServices",["$resource","connStringSVC",function(e,o){return{concepto:function(){return e(o.urlBase()+"/CMConceptos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("tipoCambioServices",["$resource","connStringSVC",function(e,o){return{tipoCambio:function(){return e(o.urlBase()+"/TipoCambio/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("facturasVencidasService",["$resource","connStringSVC",function(e,o){return{factVencidas:function(){return e(o.urlBase()+"/FacturasVencidas/:id",{id:"@_id"},{query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("erroresServices",["$resource","connStringSVC",function(e,o){return{controlError:function(e){}}}]),HISShared.factory("contactosServices",["$resource","connStringSVC",function(e,o){return{contactos:function(){return e(o.urlBase()+"/HS_Contactos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("bancosServices",["$resource","connStringSVC",function(e,o){return{bancos:function(){return e(o.urlBase()+"/cmBancos/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("directivaMostrarAgregarDatosServices",["$resource","connStringSVC",function(e,o){return{directivaAgregar:function(t){return e(o.urlBase()+"/"+t+"/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("fileAppServices",["$resource","connStringSVC",function(e,o){return{obtenerArchivos:function(t){return e(o.urlBase()+"/upload/:id",{id:"@_id"},{query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("mensajesData",["$resource","connStringSVC",function(e,o){return{mensajeSave:function(e){$("#popupMensajesSave").modal("show"),setTimeout(function(){$("#popupMensajesSave").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)},mensajeDelete:function(e){$("#popupMensajesDelete").modal("show"),setTimeout(function(){$("#popupMensajesDelete").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)},mensajeUpdate:function(e){$("#popupMensajesUpdate").modal("show"),setTimeout(function(){$("#popupMensajesUpdate").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)},mensajeErrorCheque:function(e){$("#popupMensajesErrorCheque").modal("show"),setTimeout(function(){$("#popupMensajesErrorCheque").modal("hide"),setTimeout(function(){return e(200)},800)},2e3)}}}]),HISShared.factory("NotificacionService",["$resource","connStringSVC",function(e,o){return{notificacionesUsuario:function(){return e(o.urlBase()+"/Notificacion",{},{get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})},notificacion:function(){return e(o.urlBase()+"/Notificacion/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("numeroSerieService",["$resource","connStringSVC",function(e,o){return{numeroSerie:function(){return e(o.urlBase()+"/NumeroSerie/:id",{id:"@_id"},{save:{method:"POST",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},query:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},get:{method:"GET",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},update:{method:"PUT",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}},"delete":{method:"DELETE",headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("grupoParametrosService",["$resource","connStringSVC",function(e,o){return{grupo:function(){return e(o.urlBase()+"/HISParamGroup",{},{query:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]),HISShared.factory("aprobacionesPendientesService",["$resource","connStringSVC",function(e,o){return{listaPendientes:function(){return e(o.urlBase()+"/listaAprobacionesPendientes",{},{get:{method:"GET",isArray:!0,headers:{Authorization:"Basic "+Base64.encode(o.getToken())}}})}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

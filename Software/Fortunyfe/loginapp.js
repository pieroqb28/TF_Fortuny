var app=angular.module("HIS",["ngRoute","kendo.directives","ngCookies","globalErrors","ngResource","HIS.Login"]);app.config(["$provide","$httpProvider","$compileProvider",function(o,e,t){$()}]),app.config(["$routeProvider",function(o){o.when("/",{templateUrl:"js/app/Login/loginView.html",controller:"loginController"}).when("/recuperarClave",{templateUrl:"js/app/Login/recuperarPasswordView.html",controller:"recupPassController"}).when("/recuperarClave/nuevaContrasenia/:idUsuario",{templateUrl:"js/app/Login/cambiarPassView.html",controller:"nuevoPasswordController"})}]);var HISLogin=angular.module("HIS.Login",[]);HISLogin.value("startPage","welcome.html"),HISLogin.controller("loginController",["$cookieStore","$scope","Session","startPage",function(o,e,t,r){var a=o.get("tokenActual");null==a?(e.erroresLoggin="",e.mismoValor=!1,e.formData={},e.cerrarPupUp=function(){$("#popupDatosIncorrectos").modal("hide")},e.submitForm=function(o){if(e.submitted=!0,o){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://localhost",n.sub="http://localhost",n.exp=i,n.usuario=e.formData.usuario,n.contrasena=e.formData.password,n.latitud="10",n.longitud="20",n.jti="id123456",n.aud="http://localhost";var s=JSON.stringify(a),l=JSON.stringify(n),u=KJUR.jws.JWS.sign(null,s,l,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");e.token={},e.token.jwt=u;var c={};c.Token=localStorage[u],t.authUser().save(e.token).$promise.then(function(o){var e=KJUR.jws.JWS.readSafeJSONString(b64utoutf8(o.JWT.split(".")[1]));0!=e.idUsuario&&($tokenInicio=o.JWT,localStorage.setItem("sJWT",o.JWT),window.location=r),"000000"==o.Code&&(localStorage.Token=e.token,$window.location.reload())},function(o){o.status;e.mostrarMensajeError=o.data.err,t.logginPswdIncorrecto()})}}):window.location=r}]),HISLogin.controller("recupPassController",["$scope","Session","startPage",function(o,e,t){o.formData={},o.enviarUsuario=function(t){o.submitted=!0,t&&e.recuperarPassword().recupPassword({correo:o.formData.usuario},function(o){e.mensajeEnvioEmail(function(o){window.location="/#/"})},function(o){})},o.cerrarPupUp=function(){$("#popupEnvioEmail").modal("hide")}}]),HISLogin.controller("nuevoPasswordController",["$scope","Session","startPage","$routeParams",function(o,e,t,r){o.token=r.idUsuario,localStorage.setItem("sJWT",o.token),o.formData={},o.cambiarClaveUsuario=function(t,r){if(o.submitted=!0,r)if(o.formData.nuevaClave==o.formData.repitaNuevaClave){var a={alg:"HS256",typ:"JWT"},n={},i=(KJUR.jws.IntDate.get("now"),KJUR.jws.IntDate.get("now + 1day"));n.iss="http://localhost",n.sub="http://localhost",n.exp=i,n.claveNueva=o.formData.nuevaClave,n.jti="id123456",n.aud="http://localhost";var s=JSON.stringify(a),l=JSON.stringify(n),u=KJUR.jws.JWS.sign(null,s,l,"Vbxq2mlbGJw8XH+ZoYBnUHmHga8/o/IduvU/Tht70iE=");o.clave=u,e.CambiarPswd().nuevoPassword({jwt:o.clave},function(o){e.mensajeUpdate(function(o){window.location="/#/"})},function(o){})}else $("#contraseniasDesiguales").modal("show")},o.cerrarPupUp=function(){$("#popupMensajesUpdate").modal("hide"),$("#contraseniasDesiguales").modal("hide")}}]);var globalErrors=new angular.module("globalErrors",[]).config(["$provide","$httpProvider","$compileProvider",function(o,e,t){$();console.log("Aism");var r=function(o,e){$("#mensajeError").text(e),$("#popupErroresGlobales").modal("show"),setTimeout(function(){$("#popupErroresGlobales").modal("hide")},2200)};e.interceptors.push(["$q",function(o){return{responseError:function(e){return console.log("Mole"),console.log(e),r(e.data,e.data.message),o.reject(e)}}}])}]);HISLogin.factory("Session",["$resource","$cookieStore",function(o,e){var t="http://157.245.86.94:8052";localStorage.getItem("sJWT");return{urlBase:function(){return t},authUser:function(){return o(t+"/HS_Autenticar",{},{update:{method:"PUT"}})},recuperarPassword:function(){return o(t+"/HS_Usuario/:id",{id:"@_id"},{recupPassword:{url:t+"/HS_Usuario/recuperarPswd",method:"POST"}})},CambiarPswd:function(){return o(t+"/HS_Usuario/:id",{id:"@_id"},{nuevoPassword:{url:t+"/HS_Usuario/nuevoPswd",method:"POST",headers:{Authorization:"Basic "+Base64.encode(localStorage.getItem("sJWT"))}}})},mensajeEnvioEmail:function(o){$("#popupEnvioEmail").modal("show"),setTimeout(function(){$("#popupEnvioEmail").modal("hide"),setTimeout(function(){return o(200)},800)},2e3)},mensajeUpdate:function(o){$("#popupMensajesUpdate").modal("show"),setTimeout(function(){$("#popupMensajesUpdate").modal("hide"),setTimeout(function(){return o(200)},800)},2e3)},logginPswdIncorrecto:function(){$("#popupDatosIncorrectos").modal("show"),setTimeout(function(){$("#popupDatosIncorrectos").modal("hide")},3e3)}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
